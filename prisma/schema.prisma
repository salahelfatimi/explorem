// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  username    String    
  email       String    @unique  
  password    String    
  role        Role      @default(USER)
  permissions String[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

}

enum Role {
  ADMIN
  EDITOR
  USER
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  author    String   @default("Explorem") 
  text      String
  blogId    String   @db.ObjectId
  blog      Blog?    @relation(fields: [blogId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Testimonial{
    id        String  @id @default(auto()) @map("_id") @db.ObjectId
    image     String
    author    String    
    text      String?
    fileUrl   String?
    fileKey   String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    
}
model ImageScroll{
    id        String  @id @default(auto()) @map("_id") @db.ObjectId
    imageUrl  String  
    imageKey String 
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    
}
model Blog {
    id       String    @id @default(auto()) @map("_id") @db.ObjectId
    imageUrl String?
    imageKey String?
    title    String
    description     String?
    author   String @default("Explorem") 
    published Boolean @default(true)
    createAt DateTime @default(now())
    updateAt DateTime @updatedAt
    comments Comment[]
}
